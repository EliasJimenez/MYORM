using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MyORM;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using System.Reflection;

namespace MyORMTest
{
    [TestClass]
    public class UnitTest1
    {
        CreateType Dynamic = new CreateType();
        [TestMethod]
        public void TestMethod1()
        {
            DbContext db = new DbContext();
            db.connectionString = "server=.;database=RepairWorkShop;user id=sa;password=sa@01";
            db.DataBaseServer = Server.MSSQLSERVER;


            var max  = db.Entities<rp_Orden>().Where(t=> t.ordenId == 0).Max(t=> t.ordenId );
            var min  = db.Entities<rp_Orden>().Min(t=> t.ordenId );
            rp_Orden orden2  = db.Find<rp_Orden >(4);

            //var tt = Fn(5, t => new { estaod = 0 });

        }


        Y Fn<T, Y>(object id, Expression<Func<T, Y>> select)
        {
            return Activator.CreateInstance<Y>(); ;
        }


    }





    public partial class rp_Orden
    {
        [AutoGenerated]
        [PrimaryKey]
        public int ordenId { get; set; }
        public string numeroOrden { get; set; }
        public string referenciaEquipo { get; set; }
        public int clienteId { get; set; }
        public string contacto { get; set; }
        public bool aplicaGarantia { get; set; }
        public int? tipoGarantiaId { get; set; }
        public int? razonId { get; set; }
        public int operadorId { get; set; }
        public int sucursalOrigenId { get; set; }
        public int sucursalId { get; set; }
        public int modeloId { get; set; }
        public int colorId { get; set; }
        public int estadoId { get; set; }
        public string serie { get; set; }
        public string referencia { get; set; }
        public string observacionCliente { get; set; }
        public string observacionEquipo { get; set; }
        public bool activo { get; set; }
        public DateTime fechaCreacion { get; set; }
        public string creadoPor { get; set; }
        public DateTime? fechaModificacion { get; set; }
        public string modificadoPor { get; set; }



        [AutoGeneratedNoDB]
        public string Observacion { get; set; }
    }


}
